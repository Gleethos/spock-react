{
  "className":"ut.device.CLFunctionCompiler_Spec",
  "statistics":{
    "runs":"1",
    "successRate":"100.0%",
    "failures":"0",
    "errors":"0",
    "skipped":"0",
    "duration":"0.137 seconds"
  },

  "title":"",
  "narrative":"",
  "headers":["\n            <h2> OpenCLDevice Function Optimization Integration Tests </h2>\n            <p>\n                Specified below are strict tests for covering the ability of \n                OpenCL devices to be able produce optimized functions given\n                a normal function instance created from a String...\n            </p>\n        "],"tags":{},"see":[],
  "features":[ 
    {
      "id":"The OpenCLDevice produces a working optimized Function (internally using the CLFunctionCompiler).",
      "result":"PASS",
      "duration":"0.134 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"We get the first available OpenCLDevice we can find in the CLContext!","code":[""]},
        {"kind":"and","text":"Three scalar test tensors which will be used as inputs to the optimized function.","code":[""]},
        {"kind":"and","text":"A test function which will be the optimization target for this test.","code":[""]},
        {"kind":"when","text":"We instruct the device to produce an optimized Function based on the provided test function...","code":[""]},
        {"kind":"then","text":"Initially we expect that the device does not contain the \"ad hoc\" kernel with the following signature...","code":[""]},
        {"kind":"when","text":"We test the optimized function by calling it with three arguments...","code":[""]},
        {"kind":"then","text":"...the result should look as follows:","code":[""]},
        {"kind":"and","text":"We expect that the device has an underlying kernel with the following name:","code":[""]}
      ],
      "problems":"[]"
    }
  
  ],
  "generator":"https://github.com/renatoathaydes/spock-reports"
}