{
  "className":"ut.device.OpenCL_Spec",
  "statistics":{
    "runs":"5",
    "successRate":"100.0%",
    "failures":"0",
    "errors":"0",
    "skipped":"0",
    "duration":"2.496 seconds"
  },

  "title":"",
  "narrative":"",
  "headers":[],"tags":{},"see":[],
  "features":[ 
    {
      "id":"First found OpenCLDevice will have realistic properties inside summary query.",
      "result":"PASS",
      "duration":"0.003 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"when","text":"Information about all existing OpenCL devices is being queried.","code":[""]},
        {"kind":"then","text":"The query string contains expected properties.","code":[""]}
      ],
      "problems":"[]"
    },
  
    {
      "id":"First found OpenCLDevice will have realistic numeric properties.",
      "result":"PASS",
      "duration":"0",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"when","text":"The first found Device instance is used.","code":[""]},
        {"kind":"then","text":"The device has realistic properties.","code":[""]}
      ],
      "problems":"[]"
    },
  
    {
      "id":"First found OpenCLDevice will have realistic text properties.",
      "result":"PASS",
      "duration":"0.001 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"when","text":"The first found Device instance is used.","code":[""]},
        {"kind":"then","text":"The device has realistic properties.","code":[""]}
      ],
      "problems":"[]"
    },
  
    {
      "id":"An OpenCLDevice will throw an exception when trying to add a tensor whose \"data parent\" is not outsourced.",
      "result":"PASS",
      "duration":"0.022 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"The first found OpenCLDevice instance.","code":[""]},
        {"kind":"and","text":"A mocked tensor that is not outsourced.","code":[""]},
        {"kind":"and","text":"Another mocked tensor that represents a slice of the prior one.","code":[""]},
        {"kind":"and","text":"A mocked relation between both tensors returned by the slice as component.","code":[""]},
        {"kind":"when","text":"We try to add the slice to the device.","code":[""]},
        {"kind":"then","text":"This will simple trigger the attempt of the device to register itself as component.","code":[""]},
        {"kind":"when","text":"If the tensor was not a mock it would then cause the following change request to be dispatched:","code":[""]},
        {"kind":"then","text":"The device will now try to store the tensor throw an exception because the tensor has an illegal state...","code":[""]},
        {"kind":"and","text":"It explains what went wrong.","code":[""]}
      ],
      "problems":"[]"
    },
  
    {
      "id":"A given OpenCL context can be disposed!",
      "result":"PASS",
      "duration":"2.464 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"----","code":[""]},
        {"kind":"when","text":"----","code":[""]},
        {"kind":"then","text":"----","code":[""]}
      ],
      "problems":"[]"
    }
  
  ],
  "generator":"https://github.com/renatoathaydes/spock-reports"
}