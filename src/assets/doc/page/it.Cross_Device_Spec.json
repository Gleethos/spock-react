{
  "className":"it.Cross_Device_Spec",
  "statistics":{
    "runs":"5",
    "successRate":"100.0%",
    "failures":"0",
    "errors":"0",
    "skipped":"0",
    "duration":"27.226 seconds"
  },

  "title":"Cross Device Stress Test Specification",
  "narrative":"This specification is pretty much a system test which covers\n    the behavior of the library as a whole across multiple devices!\n    No matter which device is being used for a given stress test, the result should be the same...",
  "headers":[],"tags":{},"see":[],
  "features":[ 
    {
      "id":"Convolution can model matrix multiplications across devices.",
      "result":"PASS",
      "duration":"0.151 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"A given device of any type and the settings configured for testing.","code":[""]},
        {"kind":"and","text":"Two tensors, one requiring gradients and the other one does not.","code":[""]},
        {"kind":"expect","text":"----","code":[""]},
        {"kind":"cleanup","text":"----","code":[""]},
        {"kind":"where","text":"The following settings are being used: ","code":[""]}
      ],
      "problems":"[]"
    },
  
    {
      "id":"Test cross device system test runs successfully.",
      "result":"PASS",
      "duration":"5.119 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"A given device of any type and the settings configured for testing.","code":[""]},
        {"kind":"expect","text":"The integration test runs successful.","code":[""]},
        {"kind":"where","text":"The following settings are being used: ","code":[""]}
      ],
      "problems":"[]"
    },
  
    {
      "id":"Test simple NN implementation with manual backprop",
      "result":"PASS",
      "duration":"21.739 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"----","code":[""]},
        {"kind":"expect","text":"----","code":[""]},
        {"kind":"where","text":"----","code":[""]}
      ],
      "problems":"[]"
    },
  
    {
      "id":"A gradient of ones can be set by calling the backward method on a tensor sitting on any device.",
      "result":"PASS",
      "duration":"0.006 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"We use the legacy representation of tensors for this little test!","code":[""]},
        {"kind":"and","text":"We create a small matrix of 4 fours which requires a gradient and is stored on the provided device!","code":[""]},
        {"kind":"when","text":"We now call the backward method on the tensor directly without having done any operations...","code":[""]},
        {"kind":"and","text":"Then we take the gradient to see what happened.","code":[""]},
        {"kind":"then","text":"We expect this gradient to be all ones with the shape of our matrix!","code":[""]},
        {"kind":"where","text":"----","code":[""]}
      ],
      "problems":"[]"
    },
  
    {
      "id":"Mapping tensors works for every device (even if they are not used).",
      "result":"PASS",
      "duration":"0.040 seconds",
      "iterations":{
      "tags":{},"see":[],"extraInfo":[]
      },
      "blocks":[
        {"kind":"given","text":"----","code":[""]},
        {"kind":"when","text":"\n                    We call the mapping method which is supposed to create a new tensor of the provided type.\n                    This procedure is only supported when the tensor is stored in RAM, so when\n                    the tensor is outsourced (stored on a device), then we expect that the mapping method\n                    temporarily migrates the tensor back and forth internally...\n               ","code":[""]},
        {"kind":"then","text":"We expect the String representation of the tensor to be as expected!","code":[""]},
        {"kind":"and","text":"We expect the result to have the expected target class!","code":[""]},
        {"kind":"and","text":"Lastly, the original tensor used as mapping source should be stored on the original device!","code":[""]},
        {"kind":"where","text":"We use the following data to test this mapping for a wide range of types and values!","code":[""]}
      ],
      "problems":"[]"
    }
  
  ],
  "generator":"https://github.com/renatoathaydes/spock-reports"
}